// Code generated by mockery v2.52.3. DO NOT EDIT.

package mocks

import (
	pain_001_001_03 "github.com/alanwade2001/go-sepa-iso/pain_001_001_03"
	mock "github.com/stretchr/testify/mock"
)

// IPain001Decoder is an autogenerated mock type for the IPain001Decoder type
type IPain001Decoder struct {
	mock.Mock
}

// Decode provides a mock function with given fields: content
func (_m *IPain001Decoder) Decode(content string) (*pain_001_001_03.Document, error) {
	ret := _m.Called(content)

	if len(ret) == 0 {
		panic("no return value specified for Decode")
	}

	var r0 *pain_001_001_03.Document
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*pain_001_001_03.Document, error)); ok {
		return rf(content)
	}
	if rf, ok := ret.Get(0).(func(string) *pain_001_001_03.Document); ok {
		r0 = rf(content)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pain_001_001_03.Document)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(content)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIPain001Decoder creates a new instance of IPain001Decoder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIPain001Decoder(t interface {
	mock.TestingT
	Cleanup(func())
}) *IPain001Decoder {
	mock := &IPain001Decoder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
