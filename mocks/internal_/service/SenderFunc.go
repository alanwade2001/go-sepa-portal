// Code generated by mockery v2.52.3. DO NOT EDIT.

package mocks

import (
	model "github.com/alanwade2001/go-sepa-portal/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// SenderFunc is an autogenerated mock type for the SenderFunc type
type SenderFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: initn
func (_m *SenderFunc) Execute(initn *model.Initiation) error {
	ret := _m.Called(initn)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.Initiation) error); ok {
		r0 = rf(initn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSenderFunc creates a new instance of SenderFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSenderFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *SenderFunc {
	mock := &SenderFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
