// Code generated by mockery v2.52.3. DO NOT EDIT.

package service

import (
	data "github.com/alanwade2001/go-sepa-portal/data"
	mock "github.com/stretchr/testify/mock"

	pain_001_001_03 "github.com/alanwade2001/go-sepa-iso/pain_001_001_03"
)

// MockIControl is an autogenerated mock type for the IControl type
type MockIControl struct {
	mock.Mock
}

type MockIControl_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIControl) EXPECT() *MockIControl_Expecter {
	return &MockIControl_Expecter{mock: &_m.Mock}
}

// Check provides a mock function with given fields: doc
func (_m *MockIControl) Check(doc *pain_001_001_03.Document) (*data.CheckResult, error) {
	ret := _m.Called(doc)

	if len(ret) == 0 {
		panic("no return value specified for Check")
	}

	var r0 *data.CheckResult
	var r1 error
	if rf, ok := ret.Get(0).(func(*pain_001_001_03.Document) (*data.CheckResult, error)); ok {
		return rf(doc)
	}
	if rf, ok := ret.Get(0).(func(*pain_001_001_03.Document) *data.CheckResult); ok {
		r0 = rf(doc)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*data.CheckResult)
		}
	}

	if rf, ok := ret.Get(1).(func(*pain_001_001_03.Document) error); ok {
		r1 = rf(doc)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockIControl_Check_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Check'
type MockIControl_Check_Call struct {
	*mock.Call
}

// Check is a helper method to define mock.On call
//   - doc *pain_001_001_03.Document
func (_e *MockIControl_Expecter) Check(doc interface{}) *MockIControl_Check_Call {
	return &MockIControl_Check_Call{Call: _e.mock.On("Check", doc)}
}

func (_c *MockIControl_Check_Call) Run(run func(doc *pain_001_001_03.Document)) *MockIControl_Check_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*pain_001_001_03.Document))
	})
	return _c
}

func (_c *MockIControl_Check_Call) Return(_a0 *data.CheckResult, _a1 error) *MockIControl_Check_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockIControl_Check_Call) RunAndReturn(run func(*pain_001_001_03.Document) (*data.CheckResult, error)) *MockIControl_Check_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIControl creates a new instance of MockIControl. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIControl(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIControl {
	mock := &MockIControl{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
